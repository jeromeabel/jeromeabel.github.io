---
import PostSerieCard from "@components/blog/PostSerieCard.astro";
import H1 from "@components/ui/H1.astro";
import Link from "@components/ui/Link.astro";
import P from "@components/ui/P.astro";
import Prose from "@components/ui/Prose.astro";
import Layout from "@layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const blogs = await getCollection("blog");
  return blogs.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(entry);
const publishedDate = new Date(entry.data.date);


const allPosts = (await getCollection("blog"))
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  .filter((post) => (import.meta.env.PROD ? post.data.draft !== true : true));

const seriePosts = allPosts
  .filter((post) => post.data.serie === entry.data.title)
  .sort((a, b) => (a.data?.order ?? 0) - (b.data?.order ?? 0));

const dateOptions: Intl.DateTimeFormatOptions = {
  year: "numeric",
  month: "short",
  day: "numeric",
};

const dateISOString = new Date(entry.data.date).toLocaleDateString(
  "en-EN",
  dateOptions,
);

function slugify(text: string) {
  return text
    .toString() // Convertit en cha√Æne si ce n'est pas d√©j√† le cas
    .normalize("NFD") // D√©compose les caract√®res accentu√©s
    .replace(/[\u0300-\u036f]/g, "") // Supprime les diacritiques (accents)
    .toLowerCase() // Convertit en minuscules
    .trim() // Supprime les espaces en d√©but et fin de cha√Æne
    .replace(/[^a-z0-9 -]/g, "") // Supprime les caract√®res sp√©ciaux
    .replace(/\s+/g, "-") // Remplace les espaces par des tirets
    .replace(/-+/g, "-"); // Remplace plusieurs tirets cons√©cutifs par un seul
}
---

<Layout
  page={entry.data.title}
  description={entry.data.description}
  {publishedDate}
>
  <main class="relative container flex flex-col gap-8 py-8 lg:gap-12 lg:py-24">
    <header
      class="border-muted-border relative flex w-full flex-col gap-4 border-b pb-6 lg:w-2/3 lg:gap-8 lg:pb-12"
    >
      <div class="text-muted flex flex-col md:flex-row md:items-center text-base lg:text-xl uppercase">
        <p><Link href="/blog" label="Blog" /> {  entry.data.serie ? ( <span>&nbsp;/&nbsp;</span>): ""} </p>
        {
          entry.data.serie ? (
            <p>
              <Link href=`/blog/${slugify(entry.data.serie)}` label={entry.data.serie} /> üûÑ
              <span class="text-muted">{entry.data.order}</span>
            </p>
          ) : (
            ""
          )
        }
      </div>
      <H1>
        {entry.data.title}
      </H1>

      <P>
        {entry.data.description}
      </P>

      { !entry.data.is_parent ? (<div class="text-muted flex items-center gap-2 md:mt-4">
        <Icon name="lucide:calendar" />
        <time class="text-sm">{dateISOString}</time>

        <Icon name="lucide:clock" class="ms-6" />
        <span class="text-sm">{remarkPluginFrontmatter.minutesRead}</span>
      </div>) :""}

    </header>

    { !entry.data.is_parent ? (
    <Prose class="md:mx-auto">
      <Content />
    </Prose>
    ) : (  <div class="grid grid-cols-1 gap-4 lg:grid-cols-2">
    {seriePosts.map((post) => <PostSerieCard {post} />)}
  </div>)}
  </main>
</Layout>
