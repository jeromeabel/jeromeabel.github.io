---
import H1 from "@components/ui/H1.astro";
import Link from "@components/ui/Link.astro";
import LinkNavPost from "@components/ui/LinkNavPost.astro";
import P from "@components/ui/P.astro";
import Prose from "@components/ui/Prose.astro";
import SocialShare from "@components/ui/SocialShare.astro";
import Layout from "@layouts/Layout.astro";
import { Icon } from "astro-icon/components";
import { getCollection, getEntry, render } from "astro:content";
import { getFormattedDate } from "src/utils/format-date";
import { getPostsFromSerie } from "src/utils/repository";

export async function getStaticPaths() {
  const series = await getCollection("serie");
  return series.flatMap((serie) => {
    return serie.data.posts.map((post, i) => {
      const postId = post.id.split("/").pop();
      return {
        params: { serie: serie.id, post: postId },
        props: { index: i },
      };
    });
  });
}

const { serie, post } = Astro.params;
const { index } = Astro.props;

if (!serie) {
  throw new Error("Sorry, could not find serie");
}

const currentPost = await getEntry("seriePost", `${serie}/${post}`);
const currentSerie = await getEntry("serie", serie);

if (!currentSerie) {
  throw new Error("Sorry, could not find serie");
}

const currentPosts = await getPostsFromSerie(currentSerie);
const numberOfPosts = currentPosts.length;
const prevPost = index === 0 ? null : currentPosts[index - 1];
const nextPost = index + 1 === numberOfPosts ? null : currentPosts[index + 1];

if (!currentPost) {
  throw new Error("Sorry, could not find serie");
}
const { Content, remarkPluginFrontmatter } = await render(currentPost);
const publishedDate = new Date(currentPost.data.date);

const hasPagination = nextPost !== null || prevPost !== null;

const canonicalWebsiteURL = new URL(Astro.url.pathname, Astro.site).toString();
---

<Layout
  page={currentPost.data.title}
  description={currentPost.data.description}
  {publishedDate}
>
  <main
    class="container flex flex-col gap-8 overflow-auto py-8 lg:gap-12 lg:py-24"
  >
    <header
      class="border-muted-border flex w-full flex-col gap-4 border-b pb-6 lg:w-2/3 lg:gap-8 lg:pb-12"
    >
      <div>
        <nav class="text-muted mb-4 flex flex-col gap-1 uppercase md:flex-row">
          <div class="flex items-center gap-1">
            <Link href="/blog" label="Blog" variant="menuInactive" />
            <Icon name="lucide:chevron-right" />
          </div>
          <div class="flex items-center gap-1">
            <Link
              href=`/blog/${currentSerie.id}`
              label=`${currentSerie.data.title}`
              variant="menuInactive"
            />
            <Icon name="lucide:chevron-right" />
            {index + 1}
          </div>
        </nav>
        <H1>{currentPost.data.title}</H1>
      </div>
      <P>{currentPost.data.abstract}</P>

      <div
        class="mt-4 flex flex-col justify-between gap-4 sm:flex-row md:items-center md:gap-2"
      >
        <div class="text-muted flex items-center gap-2 md:mt-4">
          <Icon name="lucide:calendar" />
          <time class="text-sm">{getFormattedDate(currentPost.data.date)}</time>
          <Icon name="lucide:clock" class="ms-4 lg:ms-6" />
          <span class="text-sm">{remarkPluginFrontmatter.minutesRead}</span>
        </div>

        <SocialShare
          url={canonicalWebsiteURL}
          title={currentPost.data.title}
          description={currentPost.data.description}
        />
      </div>
    </header>
    <Prose class="mt-4 md:mx-auto md:mt-8">
      <Content />
    </Prose>

    {
      hasPagination && (
        <div class="container mt-16 flex justify-between gap-2 md:gap-8">
          {prevPost && (
            <LinkNavPost
              type="prev"
              title={prevPost.data.title}
              id={prevPost.id}
            />
          )}

          {!prevPost && (
            <LinkNavPost
              type="prev"
              title={currentSerie.data.title}
              id={currentSerie.id}
            />
          )}

          {nextPost && (
            <LinkNavPost
              type="next"
              title={nextPost.data.title}
              id={nextPost.id}
            />
          )}
        </div>
      )
    }
  </main>
</Layout>
