---
import type { CollectionEntry } from 'astro:content';
import { Picture } from '@astrojs/image/components';

interface Props {
	work: CollectionEntry<'work'>,
	index: number,
}

const { data, slug } = Astro.props.work;
const { index } = Astro.props;

// Setup Responsive widths : grid 1 or 2 columns, gap, container/padding
// const widths = [ 464, 576, 654, 704, 928, 1152, 1408, 1428 ]; 
// const sizes = "(max-width: 640px) calc(100vw - 4rem), (max-width: 768px) calc(100vw - 4rem), (max-width: 1024px) calc(50vw - 3rem), (max-width: 1280px) calc(50vw - 4rem ), calc(50vw - 2rem)"
// const sizes = "100vw"; // So Simple!


const widths = [ 480, 640, 768, 1024, 1280, 1536, 1920 ]; 
const sizes="(max-width: 1023px) 100vw, (max-width: 1536px) calc(50vw - 3rem), 768px"
const delay = ((index + 1) * 200) + 50;

const from_g = data.from_g || 'from-purple-500';
const to_g = data.to_g || 'to-blue-500';

---

<!-- bg-gradient-to-r 
				${from_g}
				${to_g} hover:shadow-2xl 
			
			transition-all 
				hover:-translate-y-1 
				lg:hover:-translate-y-2 
			
					rounded 
				lg:rounded-md 
				xl:rounded-lg
			
			-->


<a href={`/work/${slug}`} 
style=`animation-delay:${delay}ms` 
class=`anim` >
<article class="transition-transform 
				hover:-translate-y-1
				duration-300
				lg:hover:-translate-y-2 
				shadow-xl
				hover:shadow-2xl
				p-4
				md:p-6 
				lg:p-8
				overflow-hidden
				border
				border-white
				border-dashed">
        <Picture 
			src={data.img} 
			formats={["avif", "webp", "jpg"]}
			widths={widths}
        	sizes={sizes}
			aspectRatio="16:10" 
			fit="inside"
			loading="eager"
			decoding="auto"
			class="rounded" 
			alt={`Open the work ${data.title}`} />
				</article> 

</a>


<style>
	@keyframes anim-card {
		from {
			opacity:0;
			transform: translateY(25px); 
		}
		to { 
			transform: translateY(0);  
			opacity:1
		}
	}
	.anim {
		animation: anim-card 300ms ease-in-out forwards;
		
	}
</style>